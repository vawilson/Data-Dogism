"""Lat/Long CSV formatter

This script accepts a csv generated by the data dogism questionnaire. It takes the csv and splits the lat/long column
into a row for each entry.It is assumed that the first row of the spreadsheet is the header.

This tool accepts comma separated value files (.csv).

This script requires that `pandas` be installed within the Python
environment you are running this script in.

This file can also be imported as a module and contains the following
functions:

    * seperate_column - returns a new csv with modified columns
    * main - the main function of the script
"""
import argparse

import pandas as pd

def seperate_column(file_loc):
    """Gets and prints the spreadsheet's header columns

    Parameters
    ----------
    file_loc : str
        The file location of the spreadsheet

    Returns
    -------
   csv: the modified csv
    """
    # Import the data
    lat = []
    long = []
    d = []
    df = pd.DataFrame.from_csv(file_loc)
    list = df["Mark"].tolist()
    dates = df["Date"].tolist()
    for i in range(len(list)):
        split_list = list[i].split(')')
        for j in range(len(split_list)):
            split_split_list = split_list[j].replace('(','').replace(')','').strip().split(',')
            if len(split_split_list) == 2:
                lat.append(split_split_list[0].strip())
                long.append(split_split_list[1].strip())
                d.append(dates[i])
            if len(split_split_list) == 3:
                lat.append(split_split_list[1].strip())
                long.append(split_split_list[2].strip())
                d.append(dates[i])
    df = pd.DataFrame(
        {'Latitude': lat,
         'Longitude': long,
         'Date': d
         })
    df.to_csv(path_or_buf='Processed_Form.csv',index=False)

def main():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument(
        'input_file',
        type=str,
        help="The spreadsheet file whose columns are split"
    )
    args = parser.parse_args()
    seperate_column(args.input_file)



if __name__ == "__main__":
    main()